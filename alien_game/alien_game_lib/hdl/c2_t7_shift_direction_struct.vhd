-- VHDL Entity alien_game_lib.c2_t7_shift_direction.symbol
--
-- Created:
--          by - USER.UNKNOWN (QUANG-PHAN)
--          at - 23:44:28 02/22/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c2_t7_shift_direction IS
   PORT( 
      clk     : IN     std_logic;
      enable  : IN     std_logic;
      rst_n   : IN     std_logic;
      x_coord : IN     std_logic_vector (7 DOWNTO 0);
      dir     : OUT    std_logic_vector (1 DOWNTO 0)
   );

-- Declarations

END c2_t7_shift_direction ;

--
-- VHDL Architecture alien_game_lib.c2_t7_shift_direction.struct
--
-- Created:
--          by - USER.UNKNOWN (QUANG-PHAN)
--          at - 23:44:28 02/22/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF c2_t7_shift_direction IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dout  : std_logic_vector(1 DOWNTO 0);
   SIGNAL dout1 : std_logic;
   SIGNAL dout2 : std_logic_vector(1 DOWNTO 0);
   SIGNAL dout3 : std_logic;
   SIGNAL dout4 : std_logic_vector(1 DOWNTO 0);
   SIGNAL q     : std_logic_vector(1 DOWNTO 0);
   SIGNAL q1    : std_logic_vector(1 DOWNTO 0);
   SIGNAL qb    : std_logic_vector(1 DOWNTO 0);
   SIGNAL qb1   : std_logic_vector(1 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic_vector(1 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_6' of 'adff'
   SIGNAL mw_U_6reg_cval : std_logic_vector(1 DOWNTO 0);


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'adff'
   q <= mw_U_0reg_cval;
   qb <= NOT(mw_U_0reg_cval);
   u_0seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_0reg_cval <= "10";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_0reg_cval <= dout2;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'adff'
   q1 <= mw_U_6reg_cval;
   qb1 <= NOT(mw_U_6reg_cval);
   u_6seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_6reg_cval <= "10";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_6reg_cval <= q;
      END IF;
   END PROCESS u_6seq_proc;

   -- ModuleWare code(v1.12) for instance 'const_00' of 'constval'
   dout <= "00";

   -- ModuleWare code(v1.12) for instance 'U_1' of 'mux'
   u_1combo_proc: PROCESS(dout, dout4, enable)
   BEGIN
      CASE enable IS
      WHEN '0' => dir <= dout;
      WHEN '1' => dir <= dout4;
      WHEN OTHERS => dir <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_1combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(q, qb, dout1)
   BEGIN
      CASE dout1 IS
      WHEN '0' => dout2 <= q;
      WHEN '1' => dout2 <= qb;
      WHEN OTHERS => dout2 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(q1, qb1, dout3)
   BEGIN
      CASE dout3 IS
      WHEN '0' => dout4 <= q1;
      WHEN '1' => dout4 <= qb1;
      WHEN OTHERS => dout4 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_5combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'or'
   dout1 <= x_coord(6) OR x_coord(1);

   -- ModuleWare code(v1.12) for instance 'U_4' of 'or'
   dout3 <= x_coord(6) OR x_coord(1);

   -- Instance port mappings.

END struct;
