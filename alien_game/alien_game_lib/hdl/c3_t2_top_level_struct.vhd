-- VHDL Entity alien_game_lib.c3_t2_top_level.symbol
--
-- Created:
--          by - USER.UNKNOWN (QUANG-PHAN)
--          at - 17:25:50 05/28/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t2_top_level IS
   PORT( 
      btn          : IN     std_logic_vector (3 DOWNTO 0);
      clk          : IN     std_logic;
      rst_n        : IN     std_logic;
      your_signals : OUT    std_logic
   );

-- Declarations

END c3_t2_top_level ;

--
-- VHDL Architecture alien_game_lib.c3_t2_top_level.struct
--
-- Created:
--          by - USER.UNKNOWN (QUANG-PHAN)
--          at - 20:38:03 05/30/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;
LIBRARY pre_made;

ARCHITECTURE struct OF c3_t2_top_level IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL alien_color     : std_logic_vector(23 DOWNTO 0);
   SIGNAL alien_defeated  : std_logic;
   SIGNAL alien_x_coord   : std_logic_vector(7 DOWNTO 0);
   SIGNAL alien_y_coord   : std_logic_vector(7 DOWNTO 0);
   SIGNAL bullet_color    : std_logic_vector(23 DOWNTO 0);
   SIGNAL bullet_x_coord  : std_logic_vector(7 DOWNTO 0);
   SIGNAL bullet_y_coord  : std_logic_vector(7 DOWNTO 0);
   SIGNAL color           : std_logic_vector(23 DOWNTO 0);
   SIGNAL enable          : std_logic;
   SIGNAL frame_done      : std_logic;
   SIGNAL gun_color       : std_logic_vector(23 DOWNTO 0);
   SIGNAL gun_px_idx      : std_logic_vector(1 DOWNTO 0);
   SIGNAL gun_x_coord     : std_logic_vector(7 DOWNTO 0);
   SIGNAL gun_y_coord     : std_logic_vector(7 DOWNTO 0);
   SIGNAL hit_once        : std_logic;
   SIGNAL module_select   : std_logic_vector(1 DOWNTO 0);
   SIGNAL victory_color   : std_logic_vector(23 DOWNTO 0);
   SIGNAL victory_x_coord : std_logic_vector(7 DOWNTO 0);
   SIGNAL victory_y_coord : std_logic_vector(7 DOWNTO 0);
   SIGNAL w_rdy           : std_logic;
   SIGNAL write           : std_logic;
   SIGNAL x_coord         : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord         : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT c3_t1_gun_module
   PORT (
      btn        : IN     std_logic_vector (3 DOWNTO 0);
      clk        : IN     std_logic ;
      enable     : IN     std_logic ;
      gun_px_idx : IN     std_logic_vector (1 DOWNTO 0);
      rst_n      : IN     std_logic ;
      gun_color  : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord    : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord    : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c3_t2_write_sequencer
   PORT (
      clk           : IN     std_logic ;
      defeated      : IN     std_logic ;
      hit_once      : IN     std_logic ;
      rst_n         : IN     std_logic ;
      write_ready   : IN     std_logic ;
      enable        : OUT    std_logic ;
      frame_done    : OUT    std_logic ;
      gun_px_idx    : OUT    std_logic_vector (1 DOWNTO 0);
      module_select : OUT    std_logic_vector (1 DOWNTO 0);
      write         : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c3_t4_bullet
   PORT (
      btn            : IN     std_logic ;
      clk            : IN     std_logic ;
      en             : IN     std_logic ;
      gun_x_coord    : IN     std_logic_vector (7 DOWNTO 0);
      rst_n          : IN     std_logic ;
      bullet_color   : OUT    std_logic_vector (23 DOWNTO 0);
      bullet_x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      bullet_y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c4_t2_victory
   PORT (
      clk     : IN     std_logic ;
      rst_n   : IN     std_logic ;
      color   : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c4_t3_improved_alien
   PORT (
      clk            : IN     std_logic ;
      enable         : IN     std_logic ;
      hit            : IN     std_logic ;
      rst_n          : IN     std_logic ;
      alien_color    : OUT    std_logic_vector (23 DOWNTO 0);
      alien_defeated : OUT    std_logic ;
      hit_once       : OUT    std_logic ;
      x_coord        : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord        : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT z_black_box_y
   PORT (
      clk            : IN     std_logic;
      color_BGR      : IN     std_logic_vector (23 DOWNTO 0);
      frame_done     : IN     std_logic;
      rst_n          : IN     std_logic;
      write          : IN     std_logic;
      x_coord        : IN     std_logic_vector (7 DOWNTO 0);
      y_coord        : IN     std_logic_vector (7 DOWNTO 0);
      if_you_name    : OUT    std_logic_vector (7 DOWNTO 0);
      iotre_will     : OUT    std_logic;
      like_this      : OUT    std_logic;
      of_this_course : OUT    std_logic;
      throw_you_out  : OUT    std_logic;
      w_rdy          : OUT    std_logic;
      your_signals   : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c3_t1_gun_module USE ENTITY alien_game_lib.c3_t1_gun_module;
   FOR ALL : c3_t2_write_sequencer USE ENTITY alien_game_lib.c3_t2_write_sequencer;
   FOR ALL : c3_t4_bullet USE ENTITY alien_game_lib.c3_t4_bullet;
   FOR ALL : c4_t2_victory USE ENTITY alien_game_lib.c4_t2_victory;
   FOR ALL : c4_t3_improved_alien USE ENTITY alien_game_lib.c4_t3_improved_alien;
   FOR ALL : z_black_box_y USE ENTITY pre_made.z_black_box_y;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'color' of 'mux'
   colorcombo_proc: PROCESS(alien_color, gun_color, bullet_color, 
                            victory_color, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => color <= alien_color;
      WHEN "01" => color <= gun_color;
      WHEN "10" => color <= bullet_color;
      WHEN "11" => color <= victory_color;
      WHEN OTHERS => color <= (OTHERS => 'X');
      END CASE;
   END PROCESS colorcombo_proc;

   -- ModuleWare code(v1.12) for instance 'x_coord' of 'mux'
   x_coordcombo_proc: PROCESS(alien_x_coord, gun_x_coord, bullet_x_coord, 
                              victory_x_coord, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => x_coord <= alien_x_coord;
      WHEN "01" => x_coord <= gun_x_coord;
      WHEN "10" => x_coord <= bullet_x_coord;
      WHEN "11" => x_coord <= victory_x_coord;
      WHEN OTHERS => x_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS x_coordcombo_proc;

   -- ModuleWare code(v1.12) for instance 'y_coord' of 'mux'
   y_coordcombo_proc: PROCESS(alien_y_coord, gun_y_coord, bullet_y_coord, 
                              victory_y_coord, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => y_coord <= alien_y_coord;
      WHEN "01" => y_coord <= gun_y_coord;
      WHEN "10" => y_coord <= bullet_y_coord;
      WHEN "11" => y_coord <= victory_y_coord;
      WHEN OTHERS => y_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS y_coordcombo_proc;

   -- Instance port mappings.
   U_1 : c3_t1_gun_module
      PORT MAP (
         btn        => btn,
         clk        => clk,
         enable     => enable,
         gun_px_idx => gun_px_idx,
         rst_n      => rst_n,
         gun_color  => gun_color,
         x_coord    => gun_x_coord,
         y_coord    => gun_y_coord
      );
   U_2 : c3_t2_write_sequencer
      PORT MAP (
         clk           => clk,
         defeated      => alien_defeated,
         hit_once      => hit_once,
         rst_n         => rst_n,
         write_ready   => w_rdy,
         enable        => enable,
         frame_done    => frame_done,
         gun_px_idx    => gun_px_idx,
         module_select => module_select,
         write         => write
      );
   U_7 : c3_t4_bullet
      PORT MAP (
         btn            => btn(0),
         clk            => clk,
         en             => enable,
         gun_x_coord    => gun_x_coord,
         rst_n          => rst_n,
         bullet_color   => bullet_color,
         bullet_x_coord => bullet_x_coord,
         bullet_y_coord => bullet_y_coord
      );
   U_8 : c4_t2_victory
      PORT MAP (
         clk     => clk,
         rst_n   => rst_n,
         color   => victory_color,
         x_coord => victory_x_coord,
         y_coord => victory_y_coord
      );
   U_3 : c4_t3_improved_alien
      PORT MAP (
         clk            => clk,
         enable         => enable,
         hit            => btn(0),
         rst_n          => rst_n,
         alien_color    => alien_color,
         alien_defeated => alien_defeated,
         hit_once       => hit_once,
         x_coord        => alien_x_coord,
         y_coord        => alien_y_coord
      );
   U_0 : z_black_box_y
      PORT MAP (
         clk            => clk,
         color_BGR      => color,
         frame_done     => frame_done,
         rst_n          => rst_n,
         write          => write,
         x_coord        => x_coord,
         y_coord        => y_coord,
         if_you_name    => OPEN,
         iotre_will     => OPEN,
         like_this      => OPEN,
         of_this_course => OPEN,
         throw_you_out  => OPEN,
         w_rdy          => w_rdy,
         your_signals   => your_signals
      );

END struct;
