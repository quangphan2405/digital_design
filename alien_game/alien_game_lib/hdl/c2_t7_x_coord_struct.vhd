-- VHDL Entity alien_game_lib.c2_t7_x_coord.symbol
--
-- Created:
--          by - USER.UNKNOWN (QUANG-PHAN)
--          at - 23:56:30 02/22/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c2_t7_x_coord IS
   PORT( 
      clk         : IN     std_logic;
      enable      : IN     std_logic;
      hit         : IN     std_logic;
      rst_n       : IN     std_logic;
      alien_color : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord     : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord     : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c2_t7_x_coord ;

--
-- VHDL Architecture alien_game_lib.c2_t7_x_coord.struct
--
-- Created:
--          by - USER.UNKNOWN (QUANG-PHAN)
--          at - 23:56:30 02/22/2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c2_t7_x_coord IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL d             : std_logic_vector(7 DOWNTO 0);
   SIGNAL din0          : std_logic_vector(23 DOWNTO 0);
   SIGNAL din1          : std_logic_vector(23 DOWNTO 0);
   SIGNAL dir           : std_logic_vector(1 DOWNTO 0);
   SIGNAL x_left_shift  : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_right_shift : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL x_coord_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT c2_t3_left_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t4_right_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t7_shift_direction
   PORT (
      clk     : IN     std_logic ;
      enable  : IN     std_logic ;
      rst_n   : IN     std_logic ;
      x_coord : IN     std_logic_vector (7 DOWNTO 0);
      dir     : OUT    std_logic_vector (1 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t3_left_shifter USE ENTITY alien_game_lib.c2_t3_left_shifter;
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   FOR ALL : c2_t7_shift_direction USE ENTITY alien_game_lib.c2_t7_shift_direction;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'adff'
   x_coord_internal <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_0reg_cval <= "00100000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_0reg_cval <= d;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.12) for instance 'color_default' of 'constval'
   din0 <= "000000000000000011001111";

   -- ModuleWare code(v1.12) for instance 'red' of 'constval'
   din1 <= "111111110000000000000000";

   -- ModuleWare code(v1.12) for instance 'y_default' of 'constval'
   y_coord <= "00000001";

   -- ModuleWare code(v1.12) for instance 'U_1' of 'mux'
   u_1combo_proc: PROCESS(x_coord_internal, x_right_shift, x_left_shift, 
                          dir)
   BEGIN
      CASE dir IS
      WHEN "00" => d <= x_coord_internal;
      WHEN "01" => d <= x_right_shift;
      WHEN "10" => d <= x_left_shift;
      WHEN OTHERS => d <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_1combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'mux'
   u_6combo_proc: PROCESS(din0, din1, hit)
   BEGIN
      CASE hit IS
      WHEN '0' => alien_color <= din0;
      WHEN '1' => alien_color <= din1;
      WHEN OTHERS => alien_color <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_6combo_proc;

   -- Instance port mappings.
   U_3 : c2_t3_left_shifter
      PORT MAP (
         data_in  => x_coord_internal,
         data_out => x_left_shift
      );
   U_4 : c2_t4_right_shifter
      PORT MAP (
         data_in  => x_coord_internal,
         data_out => x_right_shift
      );
   U_2 : c2_t7_shift_direction
      PORT MAP (
         clk     => clk,
         enable  => enable,
         rst_n   => rst_n,
         x_coord => x_coord_internal,
         dir     => dir
      );

   -- Implicit buffered output assignments
   x_coord <= x_coord_internal;

END struct;
