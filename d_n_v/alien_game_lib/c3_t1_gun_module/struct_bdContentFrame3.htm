<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 08:24:30 on 06/ 5/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t1_gun_module.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 21:49:33 05&#47;31&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t1_gun_module <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn        : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_px_idx : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_color  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      middle_x   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      x_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t1_gun_module ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t1_gun_module.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 21:49:33 05&#47;31&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t1_gun_module <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din1          : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dir           : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout          : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1         : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> l_shift       : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> r_shift       : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> x_00          : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_10          : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_left_shift  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_right_shift : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> y_11_sel      : <span class=T>std_logic</span>;

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> gun_color_internal : <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> middle_x_internal  : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_5reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'gun_color' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_gun_colorreg_cval : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t3_left_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t4_right_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t3_left_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t3_left_shifter;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t4_right_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t4_right_shifter;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'adff'</span>
   middle_x_internal <= mw_U_5reg_cval;
   u_5seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_5reg_cval <= <span class=S>"00010000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_5reg_cval <= dout;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'gun_color' of 'adff'</span>
   gun_color_internal <= mw_gun_colorreg_cval;
   gun_colorseq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_gun_colorreg_cval <= <span class=S>"100000001000000010000000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_gun_colorreg_cval <= gun_color_internal;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> gun_colorseq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'l_shift' of 'and'</span>
   l_shift <= <span class=K>NOT</span>(middle_x_internal(6)) <span class=K>AND</span> btn(1) <span class=K>AND</span> enable;

   <span class=C>-- ModuleWare code(v1.12) for instance 'r_shift' of 'and'</span>
   r_shift <= enable <span class=K>AND</span> btn(3) <span class=K>AND</span> <span class=K>NOT</span>(middle_x_internal(1));

   <span class=C>-- ModuleWare code(v1.12) for instance 'y_11' of 'and'</span>
   y_11_sel <= gun_px_idx(0) <span class=K>AND</span> gun_px_idx(1);

   <span class=C>-- ModuleWare code(v1.12) for instance 'const_y_11' of 'constval'</span>
   din1 <= <span class=S>"01000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'const_y_not_11' of 'constval'</span>
   dout1 <= <span class=S>"10000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'shift' of 'merge'</span>
   dir <= l_shift & r_shift;

   <span class=C>-- ModuleWare code(v1.12) for instance 'x_move' of 'mux'</span>
   x_movecombo_proc: <span class=K>PROCESS</span>(middle_x_internal, x_right_shift,
                             x_left_shift, dir)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dir <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => dout <= middle_x_internal;
      <span class=K>WHEN</span> <span class=S>"01"</span> => dout <= x_right_shift;
      <span class=K>WHEN</span> <span class=S>"10"</span> => dout <= x_left_shift;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> x_movecombo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'x_px_idx' of 'mux'</span>
   x_px_idxcombo_proc: <span class=K>PROCESS</span>(x_00, middle_x_internal, x_10,
                               gun_px_idx)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> gun_px_idx <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => x_coord <= x_00;
      <span class=K>WHEN</span> <span class=S>"01"</span> => x_coord <= middle_x_internal;
      <span class=K>WHEN</span> <span class=S>"10"</span> => x_coord <= x_10;
      <span class=K>WHEN</span> <span class=S>"11"</span> => x_coord <= middle_x_internal;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> x_px_idxcombo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'y_coord' of 'mux'</span>
   y_coordcombo_proc: <span class=K>PROCESS</span>(dout1, din1, y_11_sel)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> y_11_sel <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => y_coord <= dout1;
      <span class=K>WHEN</span> '1' => y_coord <= din1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> y_coordcombo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_3 : c2_t3_left_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => middle_x_internal,
         data_out => x_left_shift
      );
   U_6 : c2_t3_left_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => middle_x_internal,
         data_out => x_00
      );
   U_2 : c2_t4_right_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => middle_x_internal,
         data_out => x_right_shift
      );
   U_4 : c2_t4_right_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => middle_x_internal,
         data_out => x_10
      );

   <span class=C>-- Implicit buffered output assignments</span>
   gun_color <= gun_color_internal;
   middle_x  <= middle_x_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
