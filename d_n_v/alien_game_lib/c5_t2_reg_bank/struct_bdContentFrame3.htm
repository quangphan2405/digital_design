<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 08:24:42 on 06/ 5/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c5_t2_reg_bank.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 18:05:06 05&#47;30&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c5_t2_reg_bank <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span>;
      frame_done : <span class=A>IN</span>     <span class=T>std_logic</span>;
      pixd_in    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      write      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      xr         : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      xw         : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      yr         : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      yw         : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      pixd_out   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      w_rdy      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c5_t2_reg_bank ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c5_t2_reg_bank.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 18:05:06 05&#47;30&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c5_t2_reg_bank <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> en_w      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> en_w0     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> en_w1     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> pixd_out0 : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> pixd_out1 : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> to_read   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> to_write  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> w_done    : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_10' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_10reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_11' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_11reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c5_t2_col_of_row
   <span class=K>PORT</span> (
      clk      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      pixd_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      rst_n    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      write    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      xr       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      xw       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      yr       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      yw       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      pixd_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c5_t2_w_rdy
   <span class=K>PORT</span> (
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      frame_done : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      w_rdy      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t2_col_of_row <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t2_col_of_row;
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t2_w_rdy <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t2_w_rdy;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'adff'</span>
   to_write <= mw_U_10reg_cval;
   to_read <= <span class=K>NOT</span>(mw_U_10reg_cval);
   u_10seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_10reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_10reg_cval <= en_w;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_10seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'adff'</span>
   w_done <= mw_U_11reg_cval;
   u_11seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_11reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_11reg_cval <= frame_done;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_11seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'and'</span>
   en_w0 <= write <span class=K>AND</span> en_w;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'and'</span>
   en_w1 <= write <span class=K>AND</span> <span class=K>NOT</span>(en_w);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'mux'</span>
   u_2combo_proc: <span class=K>PROCESS</span>(to_write, to_read, w_done)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> w_done <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => en_w <= to_write;
      <span class=K>WHEN</span> '1' => en_w <= to_read;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => en_w <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'mux'</span>
   u_5combo_proc: <span class=K>PROCESS</span>(pixd_out0, pixd_out1, en_w)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> en_w <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => pixd_out <= pixd_out0;
      <span class=K>WHEN</span> '1' => pixd_out <= pixd_out1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => pixd_out <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_0 : c5_t2_col_of_row
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk      => clk,
         pixd_in  => pixd_in,
         rst_n    => rst_n,
         write    => en_w0,
         xr       => xr,
         xw       => xw,
         yr       => yr,
         yw       => yw,
         pixd_out => pixd_out0
      );
   U_1 : c5_t2_col_of_row
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk      => clk,
         pixd_in  => pixd_in,
         rst_n    => rst_n,
         write    => en_w1,
         xr       => xr,
         xw       => xw,
         yr       => yr,
         yw       => yw,
         pixd_out => pixd_out1
      );
   U_7 : c5_t2_w_rdy
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk        => clk,
         frame_done => frame_done,
         rst_n      => rst_n,
         w_rdy      => w_rdy
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
