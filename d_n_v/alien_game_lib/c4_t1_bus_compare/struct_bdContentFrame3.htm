<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 08:24:35 on 06/ 5/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c4_t1_bus_compare.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 16:12:57 05&#47;27&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c4_t1_bus_compare <span class=K>IS</span>
   <span class=K>PORT</span>(
      coord_1st : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      coord_2nd : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      match     : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c4_t1_bus_compare ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c4_t1_bus_compare.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 16:28:00 05&#47;27&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c4_t1_bus_compare <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> match0 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match2 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match3 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match4 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match5 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match6 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> match7 : <span class=T>std_logic</span>;


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c4_t1_bit_compare
   <span class=K>PORT</span> (
      bit1  : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      bit2  : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      match : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c4_t1_bit_compare <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c4_t1_bit_compare;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'and'</span>
   match <= match0 <span class=K>AND</span> match1 <span class=K>AND</span> match2 <span class=K>AND</span> match3 <span class=K>AND</span> match4 <span class=K>AND</span> match5
            <span class=K>AND</span> match6 <span class=K>AND</span> match7;

   <span class=C>-- Instance port mappings.</span>
   U_0 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(0),
         bit2  => coord_2nd(0),
         match => match0
      );
   U_1 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(1),
         bit2  => coord_2nd(1),
         match => match1
      );
   U_2 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(2),
         bit2  => coord_2nd(2),
         match => match2
      );
   U_3 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(3),
         bit2  => coord_2nd(3),
         match => match3
      );
   U_4 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(4),
         bit2  => coord_2nd(4),
         match => match4
      );
   U_5 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(5),
         bit2  => coord_2nd(5),
         match => match5
      );
   U_6 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(6),
         bit2  => coord_2nd(6),
         match => match6
      );
   U_7 : c4_t1_bit_compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         bit1  => coord_1st(7),
         bit2  => coord_2nd(7),
         match => match7
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
