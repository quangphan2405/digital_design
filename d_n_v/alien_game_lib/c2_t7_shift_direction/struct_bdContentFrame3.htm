<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 08:24:28 on 06/ 5/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t7_shift_direction.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 21:51:31 02&#47;23&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t7_shift_direction <span class=K>IS</span>
   <span class=K>PORT</span>(
      last_dir : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      dir      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t7_shift_direction ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t7_shift_direction.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 21:51:31 02&#47;23&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t7_shift_direction <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> edge   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> l_edge : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> r_edge : <span class=T>std_logic</span>;



<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'l_edge' of 'and'</span>
   l_edge <= x_coord(7) <span class=K>AND</span> last_dir;

   <span class=C>-- ModuleWare code(v1.12) for instance 'r_edge' of 'and'</span>
   r_edge <= x_coord(0) <span class=K>AND</span> <span class=K>NOT</span>(last_dir);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'inv'</span>
   dout <= <span class=K>NOT</span>(last_dir);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(last_dir, dout, edge)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> edge <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dir <= last_dir;
      <span class=K>WHEN</span> '1' => dir <= dout;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dir <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'edge' of 'or'</span>
   edge <= r_edge <span class=K>OR</span> l_edge;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
