<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 08:24:38 on 06/ 5/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c4_t3_improved_alien.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 22:08:21 06&#47; 4&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c4_t3_improved_alien <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk         : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit         : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      alien_color : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      defeated    : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      x_coord     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c4_t3_improved_alien ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c4_t3_improved_alien.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 22:08:21 06&#47; 4&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c4_t3_improved_alien <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> color         : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dead_red      : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din1          : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dir           : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2         : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout4         : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout7         : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> hit_once      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> last_dir      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> x_left_shift  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_right_shift : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_shifted     : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> alien_color_internal : <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> defeated_internal    : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> x_coord_internal     : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_0reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_5reg_cval : <span class=T>std_logic</span>;

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_8' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_8reg_cval : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_9' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_9reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t3_left_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t4_right_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t7_shift_direction
   <span class=K>PORT</span> (
      last_dir : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      x_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      dir      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c4_t3_hit_controller
   <span class=K>PORT</span> (
      clk      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      defeated : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      hit_once : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t3_left_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t3_left_shifter;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t4_right_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t4_right_shifter;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t7_shift_direction <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t7_shift_direction;
   <span class=K>FOR</span> <span class=K>ALL</span> : c4_t3_hit_controller <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c4_t3_hit_controller;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'adff'</span>
   x_coord_internal <= mw_U_0reg_cval;
   u_0seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_0reg_cval <= <span class=S>"00100000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_0reg_cval <= dout4;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'adff'</span>
   last_dir <= mw_U_5reg_cval;
   u_5seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_5reg_cval <= '1';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_5reg_cval <= dir;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'adff'</span>
   alien_color_internal <= mw_U_8reg_cval;
   u_8seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_8reg_cval <= <span class=S>"111111110000000000000000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_8reg_cval <= color;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_8seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'adff'</span>
   y_coord <= mw_U_9reg_cval;
   u_9seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_9reg_cval <= <span class=S>"00000001"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_9reg_cval <= dout2;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_9seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'change' of 'constval'</span>
   din1 <= <span class=S>"000000000000111110100000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'red' of 'constval'</span>
   dead_red <= <span class=S>"000000000000000011001111"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'y_default' of 'constval'</span>
   dout2 <= <span class=S>"00000001"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'mux'</span>
   u_6combo_proc: <span class=K>PROCESS</span>(dout7, dead_red, defeated_internal)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> defeated_internal <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => color <= dout7;
      <span class=K>WHEN</span> '1' => color <= dead_red;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => color <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_6combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'mux'</span>
   u_7combo_proc: <span class=K>PROCESS</span>(x_coord_internal, x_shifted, enable)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> enable <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout4 <= x_coord_internal;
      <span class=K>WHEN</span> '1' => dout4 <= x_shifted;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout4 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_7combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_18' of 'mux'</span>
   u_18combo_proc: <span class=K>PROCESS</span>(alien_color_internal, din1, hit_once)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> hit_once <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout7 <= alien_color_internal;
      <span class=K>WHEN</span> '1' => dout7 <= din1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout7 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_18combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'l_or_r' of 'mux'</span>
   l_or_rcombo_proc: <span class=K>PROCESS</span>(x_right_shift, x_left_shift, last_dir)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> last_dir <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => x_shifted <= x_right_shift;
      <span class=K>WHEN</span> '1' => x_shifted <= x_left_shift;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_shifted <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> l_or_rcombo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_3 : c2_t3_left_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => x_coord_internal,
         data_out => x_left_shift
      );
   U_4 : c2_t4_right_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => x_coord_internal,
         data_out => x_right_shift
      );
   U_2 : c2_t7_shift_direction
      <span class=K>PORT</span> <span class=K>MAP</span> (
         last_dir => last_dir,
         x_coord  => x_coord_internal,
         dir      => dir
      );
   U_1 : c4_t3_hit_controller
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk      => clk,
         hit      => hit,
         rst_n    => rst_n,
         defeated => defeated_internal,
         hit_once => hit_once
      );

   <span class=C>-- Implicit buffered output assignments</span>
   alien_color <= alien_color_internal;
   defeated    <= defeated_internal;
   x_coord     <= x_coord_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
