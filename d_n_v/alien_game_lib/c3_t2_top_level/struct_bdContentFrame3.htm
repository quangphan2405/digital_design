<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 08:24:31 on 06/ 5/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t2_top_level.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 07:42:16 06&#47; 5&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t2_top_level <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn     : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n   : <span class=A>IN</span>     <span class=T>std_logic</span>;
      channel : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      lat     : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      s_clk   : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      s_rst   : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      s_sda   : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      sb      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t2_top_level ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t2_top_level.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 07:42:16 06&#47; 5&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t2_top_level <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> alien_color     : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> alien_x_coord   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> alien_y_coord   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_color    : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_x_coord  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_y_coord  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> defeated        : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout            : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1           : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout2           : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> enable          : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> frame_done      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> gun_color       : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> gun_px_idx      : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> gun_x_coord     : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> gun_y_coord     : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> hit             : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> middle_x        : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> module_select   : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> victory_color   : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> victory_px_idx  : <span class=T>std_logic_vector</span>(4 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> victory_x_coord : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> victory_y_coord : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> w_rdy           : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> write           : <span class=T>std_logic</span>;


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c3_t1_gun_module
   <span class=K>PORT</span> (
      btn        : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable     : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      gun_px_idx : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      gun_color  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      middle_x   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      x_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c3_t2_write_sequencer
   <span class=K>PORT</span> (
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      defeated       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      write_ready    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      frame_done     : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      gun_px_idx     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      module_select  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      victory_px_idx : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (4 <span class=K>DOWNTO</span> 0);
      write          : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c3_t4_bullet
   <span class=K>PORT</span> (
      btn            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      en             : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      gun_x_coord    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      bullet_color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      bullet_x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c4_t1_hit_detector
   <span class=K>PORT</span> (
      alien_x_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y_coord  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_x_coord : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y_coord : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit            : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c4_t2_victory
   <span class=K>PORT</span> (
      clk     : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      px_idx  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (4 <span class=K>DOWNTO</span> 0);
      rst_n   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c4_t3_improved_alien
   <span class=K>PORT</span> (
      clk         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      enable      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      alien_color : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      defeated    : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      x_coord     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c5_t4_display_controller
   <span class=K>PORT</span> (
      clk           : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      frame_written : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      pixd_in       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      rst_n         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      write         : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      xw            : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      yw            : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      channel       : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      lat           : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      s_clk         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      s_rst         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      s_sda         : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      sb            : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      w_rdy         : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t1_gun_module <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t1_gun_module;
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t2_write_sequencer <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t2_write_sequencer;
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t4_bullet <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t4_bullet;
   <span class=K>FOR</span> <span class=K>ALL</span> : c4_t1_hit_detector <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c4_t1_hit_detector;
   <span class=K>FOR</span> <span class=K>ALL</span> : c4_t2_victory <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c4_t2_victory;
   <span class=K>FOR</span> <span class=K>ALL</span> : c4_t3_improved_alien <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c4_t3_improved_alien;
   <span class=K>FOR</span> <span class=K>ALL</span> : c5_t4_display_controller <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c5_t4_display_controller;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'mux'</span>
   u_4combo_proc: <span class=K>PROCESS</span>(alien_x_coord, gun_x_coord, bullet_x_coord,
                          victory_x_coord, module_select)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> module_select <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => dout <= alien_x_coord;
      <span class=K>WHEN</span> <span class=S>"01"</span> => dout <= gun_x_coord;
      <span class=K>WHEN</span> <span class=S>"10"</span> => dout <= bullet_x_coord;
      <span class=K>WHEN</span> <span class=S>"11"</span> => dout <= victory_x_coord;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_4combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'mux'</span>
   u_5combo_proc: <span class=K>PROCESS</span>(alien_y_coord, gun_y_coord, bullet_y_coord,
                          victory_y_coord, module_select)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> module_select <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => dout1 <= alien_y_coord;
      <span class=K>WHEN</span> <span class=S>"01"</span> => dout1 <= gun_y_coord;
      <span class=K>WHEN</span> <span class=S>"10"</span> => dout1 <= bullet_y_coord;
      <span class=K>WHEN</span> <span class=S>"11"</span> => dout1 <= victory_y_coord;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout1 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'mux'</span>
   u_6combo_proc: <span class=K>PROCESS</span>(alien_color, gun_color, bullet_color,
                          victory_color, module_select)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> module_select <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"00"</span> => dout2 <= alien_color;
      <span class=K>WHEN</span> <span class=S>"01"</span> => dout2 <= gun_color;
      <span class=K>WHEN</span> <span class=S>"10"</span> => dout2 <= bullet_color;
      <span class=K>WHEN</span> <span class=S>"11"</span> => dout2 <= victory_color;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout2 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_6combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_2 : c3_t1_gun_module
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn        => btn,
         clk        => clk,
         enable     => enable,
         gun_px_idx => gun_px_idx,
         rst_n      => rst_n,
         gun_color  => gun_color,
         middle_x   => middle_x,
         x_coord    => gun_x_coord,
         y_coord    => gun_y_coord
      );
   U_3 : c3_t2_write_sequencer
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk            => clk,
         defeated       => defeated,
         rst_n          => rst_n,
         write_ready    => w_rdy,
         enable         => enable,
         frame_done     => frame_done,
         gun_px_idx     => gun_px_idx,
         module_select  => module_select,
         victory_px_idx => victory_px_idx,
         write          => write
      );
   U_7 : c3_t4_bullet
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn            => btn(0),
         clk            => clk,
         en             => enable,
         gun_x_coord    => middle_x,
         rst_n          => rst_n,
         bullet_color   => bullet_color,
         bullet_x_coord => bullet_x_coord,
         bullet_y_coord => bullet_y_coord
      );
   U_8 : c4_t1_hit_detector
      <span class=K>PORT</span> <span class=K>MAP</span> (
         alien_x_coord  => alien_x_coord,
         alien_y_coord  => alien_y_coord,
         bullet_x_coord => bullet_x_coord,
         bullet_y_coord => bullet_y_coord,
         clk            => clk,
         rst_n          => rst_n,
         hit            => hit
      );
   U_9 : c4_t2_victory
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk     => clk,
         px_idx  => victory_px_idx,
         rst_n   => rst_n,
         color   => victory_color,
         x_coord => victory_x_coord,
         y_coord => victory_y_coord
      );
   U_1 : c4_t3_improved_alien
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk         => clk,
         enable      => enable,
         hit         => hit,
         rst_n       => rst_n,
         alien_color => alien_color,
         defeated    => defeated,
         x_coord     => alien_x_coord,
         y_coord     => alien_y_coord
      );
   U_0 : c5_t4_display_controller
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk           => clk,
         frame_written => frame_done,
         pixd_in       => dout2,
         rst_n         => rst_n,
         write         => write,
         xw            => dout,
         yw            => dout1,
         channel       => channel,
         lat           => lat,
         s_clk         => s_clk,
         s_rst         => s_rst,
         s_sda         => s_sda,
         sb            => sb,
         w_rdy         => w_rdy
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
