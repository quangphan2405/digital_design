<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 15:33:58 on 05/27/2020 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t4_bullet.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 21:54:06 05&#47;26&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t4_bullet <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn            : <span class=A>IN</span>     <span class=T>std_logic</span>;
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span>;
      en             : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_x_coord    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span>;
      bullet_color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      bullet_x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t4_bullet ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t4_bullet.fsm</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - USER.UNKNOWN (QUANG-PHAN)</span>
<span class=C>--          at - 15:05:37 05&#47;27&#47;2020</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ARCHITECTURE</span> fsm <span class=K>OF</span> c3_t4_bullet <span class=K>IS</span>

   <span class=C>-- Architecture Declarations</span>
   <span class=K>SIGNAL</span> x_coord : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=K>TYPE</span> STATE_TYPE <span class=K>IS</span> (
      init,
      y3,
      y4,
      y5,
      y6,
      y7,
      y8,
      get_x
   );

   <span class=C>-- Declare current and next state signals</span>
   <span class=K>SIGNAL</span> current_state : STATE_TYPE;
   <span class=K>SIGNAL</span> next_state : STATE_TYPE;

   <span class=C>-- Declare any pre-registered internal signals</span>
   <span class=K>SIGNAL</span> bullet_color_int : <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_x_coord_int : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_y_coord_int : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);

<span class=K>BEGIN</span>

   <span class=C>-----------------------------------------------------------------</span>
   clocked_proc : <span class=K>PROCESS</span> (
      clk,
      rst_n
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         current_state <= init;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk = '1') <span class=K>THEN</span>
         current_state <= next_state;
         <span class=C>-- Registered output assignments</span>
         bullet_color <= bullet_color_int;
         bullet_x_coord <= bullet_x_coord_int;
         bullet_y_coord <= bullet_y_coord_int;
         <span class=C>-- Default Assignment To Internals</span>
         x_coord <= (<span class=K>others</span> => '0');

         <span class=C>-- Combined Actions</span>
         <span class=K>CASE</span> current_state <span class=K>IS</span>
            <span class=K>WHEN</span> init =>
               x_coord <= <span class=S>"00000000"</span>;
            <span class=K>WHEN</span> y3 =>
               x_coord <= x_coord;
            <span class=K>WHEN</span> y4 =>
               x_coord <= x_coord;
            <span class=K>WHEN</span> y5 =>
               x_coord <= x_coord;
            <span class=K>WHEN</span> y6 =>
               x_coord <= x_coord;
            <span class=K>WHEN</span> y7 =>
               x_coord <= x_coord;
            <span class=K>WHEN</span> y8 =>
               x_coord <= x_coord;
            <span class=K>WHEN</span> get_x =>
               x_coord <= gun_x_coord;
            <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
               <span class=K>NULL</span>;
         <span class=K>END</span> <span class=K>CASE</span>;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> clocked_proc;

   <span class=C>-----------------------------------------------------------------</span>
   nextstate_proc : <span class=K>PROCESS</span> (
      btn,
      current_state,
      en
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> current_state <span class=K>IS</span>
         <span class=K>WHEN</span> init =>
            <span class=K>IF</span> (btn = '0') <span class=K>THEN</span>
               next_state <= init;
            <span class=K>ELSIF</span> (btn = '1') <span class=K>THEN</span>
               next_state <= get_x;
            <span class=K>ELSE</span>
               next_state <= init;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> y3 =>
            <span class=K>IF</span> (en = '1') <span class=K>THEN</span>
               next_state <= y4;
            <span class=K>ELSIF</span> (en = '0') <span class=K>THEN</span>
               next_state <= y3;
            <span class=K>ELSE</span>
               next_state <= y3;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> y4 =>
            <span class=K>IF</span> (en = '1') <span class=K>THEN</span>
               next_state <= y5;
            <span class=K>ELSIF</span> (en = '0') <span class=K>THEN</span>
               next_state <= y4;
            <span class=K>ELSE</span>
               next_state <= y4;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> y5 =>
            <span class=K>IF</span> (en = '1') <span class=K>THEN</span>
               next_state <= y6;
            <span class=K>ELSIF</span> (en = '0') <span class=K>THEN</span>
               next_state <= y5;
            <span class=K>ELSE</span>
               next_state <= y5;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> y6 =>
            <span class=K>IF</span> (en = '1') <span class=K>THEN</span>
               next_state <= y7;
            <span class=K>ELSIF</span> (en = '0') <span class=K>THEN</span>
               next_state <= y6;
            <span class=K>ELSE</span>
               next_state <= y6;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> y7 =>
            <span class=K>IF</span> (en = '1') <span class=K>THEN</span>
               next_state <= y8;
            <span class=K>ELSIF</span> (en = '0') <span class=K>THEN</span>
               next_state <= y7;
            <span class=K>ELSE</span>
               next_state <= y7;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> y8 =>
            <span class=K>IF</span> (en = '1') <span class=K>THEN</span>
               next_state <= init;
            <span class=K>ELSIF</span> (en = '0') <span class=K>THEN</span>
               next_state <= y8;
            <span class=K>ELSE</span>
               next_state <= y8;
            <span class=K>END</span> <span class=K>IF</span>;
         <span class=K>WHEN</span> get_x =>
            next_state <= y3;
         <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
            next_state <= init;
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> nextstate_proc;

   <span class=C>-----------------------------------------------------------------</span>
   output_proc : <span class=K>PROCESS</span> (
      current_state,
      x_coord
   )
   <span class=C>-----------------------------------------------------------------</span>
   <span class=K>BEGIN</span>
      <span class=C>-- Default Assignment</span>
      bullet_color_int <= (<span class=K>others</span> => '0');
      bullet_x_coord_int <= (<span class=K>others</span> => '0');
      bullet_y_coord_int <= (<span class=K>others</span> => '0');

      <span class=C>-- Combined Actions</span>
      <span class=K>CASE</span> current_state <span class=K>IS</span>
         <span class=K>WHEN</span> init =>
            bullet_x_coord_int <= <span class=S>"00000000"</span>;
            bullet_y_coord_int <= <span class=S>"01000000"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> y3 =>
            bullet_x_coord_int <= x_coord;
            bullet_y_coord_int <= <span class=S>"00100000"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> y4 =>
            bullet_x_coord_int <= x_coord;
            bullet_y_coord_int <= <span class=S>"00010000"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> y5 =>
            bullet_x_coord_int <= x_coord;
            bullet_y_coord_int <= <span class=S>"00001000"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> y6 =>
            bullet_x_coord_int <= x_coord;
            bullet_y_coord_int <= <span class=S>"00000100"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> y7 =>
            bullet_x_coord_int <= x_coord;
            bullet_y_coord_int <= <span class=S>"00000010"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> y8 =>
            bullet_x_coord_int <= x_coord;
            bullet_y_coord_int <= <span class=S>"00000001"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> get_x =>
            bullet_x_coord_int <= <span class=S>"00000000"</span>;
            bullet_y_coord_int <= <span class=S>"01000000"</span>;
            bullet_color_int <= <span class=S>"000000000000000011001100"</span>;
         <span class=K>WHEN</span> <span class=K>OTHERS</span> =>
            <span class=K>NULL</span>;
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> output_proc;

<span class=K>END</span> fsm;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
